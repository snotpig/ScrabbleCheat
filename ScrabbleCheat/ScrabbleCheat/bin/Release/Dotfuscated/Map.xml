<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.1.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2013-06-19T19:40:31</timestamp>
        <product version="5.0.2500.0" user="Adam Sands" serial="153814-391">Dotfuscator Community Edition</product>
    </header>
    <mapping>
        <module>
            <name>ScrabbleCheat.exe</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{EFF16FFC-A679-4A8B-B5A0-9FBE9FD4F41D}</name>
                <newname>a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{EFF16FFC-A679-4A8B-B5A0-9FBE9FD4F41D}/__StaticArrayInitTypeSize=60</signature>
                        <name>$$method0x6000001-1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{EFF16FFC-A679-4A8B-B5A0-9FBE9FD4F41D}/__StaticArrayInitTypeSize=450</signature>
                        <name>$$method0x6000109-1</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{EFF16FFC-A679-4A8B-B5A0-9FBE9FD4F41D}/__StaticArrayInitTypeSize=450</name>
                <newname>a/a</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{EFF16FFC-A679-4A8B-B5A0-9FBE9FD4F41D}/__StaticArrayInitTypeSize=60</name>
                <newname>a/b</newname>
                <methodlist />
                <fieldlist />
            </type>
            <type>
                <name>ScrabbleCheat._square</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(ScrabbleCheat._square, ScrabbleCheat._square)</signature>
                        <name>op_Equality</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(ScrabbleCheat._square, ScrabbleCheat._square)</signature>
                        <name>op_Inequality</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>col</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>row</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat._word</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>start</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.AboutBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>animationLeft_Completed</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Ellipse_MouseDown</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Animation.DoubleAnimation</signature>
                        <name>animationHeight</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Animation.DoubleAnimation</signature>
                        <name>animationLeft</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Animation.DoubleAnimation</signature>
                        <name>animationTop</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.Animation.DoubleAnimation</signature>
                        <name>animationWidth</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>disc</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>DURATION</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isOpening</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtCopyright</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtProgram</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtVersion</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.App</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.BlankTile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>SetLetter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WipeLetter</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.VisualBrush[]</signature>
                        <name>letterBrushes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>letters</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.LoadDialog</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdCancel_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdDelete_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdLoad_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>listView_MouseDoubleClick</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Load</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>ShowDlg</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>appDataDir</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdCancel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdDelete</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdLoad</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>files</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ListView</signature>
                        <name>listView</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.SaveObject</signature>
                        <name>saveObject</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SavePath</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.MainWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64, float64, int32)</signature>
                        <name>AddToBoard</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float64, int32)</signature>
                        <name>AddToRack</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.DoWorkEventArgs)</signature>
                        <name>backgroundWorker_DoWork</name>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.RunWorkerCompletedEventArgs)</signature>
                        <name>backgroundWorker_RunWorkerCompleted</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BackSpace</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BackSpaceRack</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>canvas_MouseRightButtonDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>canvas_PreviewMouseLeftButtonUp</name>
                    </method>
                    <method>
                        <signature>void(ScrabbleCheat.Tile, ScrabbleCheat._square)</signature>
                        <name>ChooseBlankLetter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearRack</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdAbout_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdLoad_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdNewGame_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdPause_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdPlay0_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdPlay1_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdPlay2_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdPlay3_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdPlay4_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdPlay5_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdSave_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdStart_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdTest_Click</name>
                    </method>
                    <method>
                        <signature>bool(ScrabbleCheat._square)</signature>
                        <name>ContainsTile</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateArrows</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateTiles</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>EnableButtons</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Expired</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>int32(float64, int32)</signature>
                        <name>FindRackSpace</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>ScrabbleCheat._square(float64, float64, int32)</signature>
                        <name>FindSquare</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HideResults</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.Key)</signature>
                        <name>KeyPressed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LaunchAboutBox</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LayoutTiles</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Point)</signature>
                        <name>LeftClick</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Load</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>MarkDirty</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ScrabbleCheat.Tile, int32, int32)</signature>
                        <name>MoveToBoard</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ScrabbleCheat.Tile, int32)</signature>
                        <name>MoveToRack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NewGame</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.CancelEventArgs)</signature>
                        <name>OnClosing</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement)</signature>
                        <name>PlaceTile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>PlayOnBoard</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PopulateBoard</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PopulateRack</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PositionArrow</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PromptSave</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RackClicked</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(ScrabbleCheat.Tile)</signature>
                        <name>ReboundToRack</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>rectRack_MouseLeftButtonUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveAllArrows</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveFromBoard</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveFromRack</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReturnTile</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReturnToBox</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReturnToRack</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ShowOnBoard</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowResults</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShowWords</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartProgress</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopProgress</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(ScrabbleCheat.Tile, int32, int32)</signature>
                        <name>StretchToBoard</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>TidyRack</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt0_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt0_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt1_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt1_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt2_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt2_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt3_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt3_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt4_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt4_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt5_MouseEnter</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseEventArgs)</signature>
                        <name>txt5_MouseLeave</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnShowOnBoard</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(ScrabbleCheat._square)</signature>
                        <name>UpdateArrow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>Validated</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>Window_KeyDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ALPHABET</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.MainWindow/dirs</signature>
                        <name>arrow</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Rectangle[]</signature>
                        <name>arrowShapes</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat._square</signature>
                        <name>arrowSquare</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.BackgroundWorker</signature>
                        <name>backgroundWorker</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.SolidColorBrush</signature>
                        <name>black</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>char[0...,0...]</signature>
                        <name>board</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Rectangle</signature>
                        <name>box</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>Snotsoft.Controls.DragCanvasX</signature>
                        <name>canvas</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdAbout</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdLoad</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdNewGame</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdPlay0</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdPlay1</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdPlay2</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdPlay3</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdPlay4</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdPlay5</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdSave</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdStart</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.WordsEngine</signature>
                        <name>engine</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Primitives.UniformGrid</signature>
                        <name>gridBoard</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDirty</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LETTERS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NEWGAME</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NUMRESULTS</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Point</signature>
                        <name>originalLocation</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>UserControls.CircularProgressBar</signature>
                        <name>progress</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rack</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RACK_LEFT</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RACK_TOP</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Rectangle</signature>
                        <name>rectRack</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.SolidColorBrush</signature>
                        <name>red</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ScrabbleCheat.Turn&gt;</signature>
                        <name>results</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>s0</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>s1</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>s2</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>s3</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>s4</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>s5</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SAVEFILE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SAVEFOLDER</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.Select</signature>
                        <name>select</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>SPACE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ScrabbleCheat.Tile&gt;</signature>
                        <name>tiles</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.SolidColorBrush</signature>
                        <name>transparent</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>txt0</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>txt1</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>txt2</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>txt3</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>txt4</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>txt5</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>windowTitle</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.SolidColorBrush</signature>
                        <name>wordHighlight</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.MainWindow/dirs</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>ScrabbleCheat.MainWindow/dirs</signature>
                        <name>Down</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.MainWindow/dirs</signature>
                        <name>None</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.MainWindow/dirs</signature>
                        <name>Rack</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.MainWindow/dirs</signature>
                        <name>RedDown</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.MainWindow/dirs</signature>
                        <name>RedRight</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.MainWindow/dirs</signature>
                        <name>Right</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.MsgBox</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdOK_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(float64, float64)</signature>
                        <name>SetPos</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ShowMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdOK</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>txt</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.PromptSave</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdCancel_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdYes_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdCancel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdYes</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>confirmed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Label</signature>
                        <name>lblMsg</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ScrabbleCheat.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ScrabbleCheat.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.SaveDialog</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, string)</signature>
                        <name>_CreateDelegate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdCancel_Click</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>cmdSave_Click</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValid</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetName</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>Window_KeyDown</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>Window_MouseLeftButtonDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>appDataDir</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdCancel</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>cmdSave</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>invalidFileChars</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NEWGAME</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>ScrabbleCheat.SaveObject</signature>
                        <name>saveObject</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SavePath</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtName</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.SaveObject</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(char[0...,0...], string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(char[0...,0...])</signature>
                        <name>CopyData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>char(char)</signature>
                        <name>FilterChar</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>FilterString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>GetObjectData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char[0...,0...]</signature>
                        <name>board</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rack</name>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.Select</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>grid_MouseLeftButtonUp</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>Window_KeyDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>col</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>grid</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>letter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>char[0...,0...]</signature>
                        <name>letters</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Point</signature>
                        <name>pt</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>row</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.Serializer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ScrabbleCheat.SaveObject(string)</signature>
                        <name>DeSerializeObject</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, ScrabbleCheat.SaveObject)</signature>
                        <name>SerializeObject</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ScrabbleCheat.Setup</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateFolder</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
            <type>
                <name>ScrabbleCheat.Tile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>GetScore</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>SetLetter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WipeLetter</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Media.VisualBrush</signature>
                        <name>brush</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>col</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;char,int32&gt;</signature>
                        <name>dict</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Rectangle</signature>
                        <name>face</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>letter</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>row</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>stretched</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.Turn</name>
                <methodlist>
                    <method>
                        <signature>void(ScrabbleCheat.Word, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>score</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>sPos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ScrabbleCheat.Word&gt;</signature>
                        <name>words</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.Word</name>
                <methodlist>
                    <method>
                        <signature>void(string, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(ScrabbleCheat.Word)</signature>
                        <name>Equals</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>file</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>rank</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>vert</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>ScrabbleCheat.WordsEngine</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalculateScores</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckForEmptyBoard</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>CheckForSinglet</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(ScrabbleCheat.Turn, ScrabbleCheat.Turn)</signature>
                        <name>CompareScores</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(ScrabbleCheat.Word, ScrabbleCheat.Word)</signature>
                        <name>CompareTilesUsed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(ScrabbleCheat.Word, ScrabbleCheat.Word)</signature>
                        <name>CompareWordLength</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>ScrabbleCheat._word(string, int32)</signature>
                        <name>FindWord</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, System.Collections.Generic.List`1&lt;ScrabbleCheat.Turn&gt;)</signature>
                        <name>FindWords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetFirstWord</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(ScrabbleCheat.Word)</signature>
                        <name>GetNumTilesUsed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetPrimaryWords</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetSecondaryWords</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetSingletCrossWords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetSingletWords</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ScrabbleCheat.Turn&gt;, string, char[0...,0...], int32)</signature>
                        <name>GetWords</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>GivesBonus</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeBoardStrings</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Pause</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveDuplicates</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ScrabbleCheat.Turn&gt;)</signature>
                        <name>ReturnResults</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;ScrabbleCheat.Turn&gt;)</signature>
                        <name>ReturnSinglets</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(ScrabbleCheat.Word)</signature>
                        <name>ScoreWord</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>SetSpaceToken</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Test</name>
                        <newname>j</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>BLANK</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>char[0...,0...]</signature>
                        <name>board</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string[][]</signature>
                        <name>boardStrings</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BONUS</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HOR</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Snotsoft.Words.Lexicon</signature>
                        <name>lex</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>numResults</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rack</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>char[0...,0...]</signature>
                        <name>scrabbleBoard</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ScrabbleCheat.Turn&gt;</signature>
                        <name>singletList</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>sorted</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>SPACE</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;ScrabbleCheat.Turn&gt;</signature>
                        <name>turnList</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VER</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Snotsoft.Controls.DragCanvasX</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement)</signature>
                        <name>BringToFront</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Rect(float64, float64)</signature>
                        <name>CalculateDragElementRect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.UIElement(System.Windows.DependencyObject)</signature>
                        <name>FindCanvasChild</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowDragging</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowDragOutOfView</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_BringDraggedToFront</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Windows.UIElement()</signature>
                        <name>get_ElementBeingDragged</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(System.Windows.UIElement)</signature>
                        <name>GetCanBeDragged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Windows.UIElement()</signature>
                        <name>GetLastDragged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Point()</signature>
                        <name>GetLastLocation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnPreviewMouseLeftButtonDown</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseEventArgs)</signature>
                        <name>OnPreviewMouseMove</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.MouseButtonEventArgs)</signature>
                        <name>OnPreviewMouseUp</name>
                    </method>
                    <method>
                        <signature>float64(float64, float64, bool&amp;)</signature>
                        <name>ResolveOffset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement)</signature>
                        <name>SendToBack</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowDragging</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowDragOutOfView</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_BringDraggedToFront</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement)</signature>
                        <name>set_ElementBeingDragged</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement, bool)</signature>
                        <name>SetCanBeDragged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.UIElement, bool)</signature>
                        <name>UpdateZOrder</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AllowDraggingProperty</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>AllowDragOutOfViewProperty</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>bottom</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>BringDraggedToFrontProperty</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>CanBeDraggedProperty</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.UIElement</signature>
                        <name>elementBeingDragged</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.UIElement</signature>
                        <name>elementLastDragged</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isDragInProgress</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>left</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>modifyLeftOffset</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>modifyTopOffset</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Point</signature>
                        <name>origCursorLocation</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>origHorizOffset</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>origVertOffset</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>right</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>top</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Snotsoft.Controls.FocusExtension</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Windows.DependencyObject)</signature>
                        <name>GetIsFocused</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>OnIsFocusedPropertyChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.DependencyObject, bool)</signature>
                        <name>SetIsFocused</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.DependencyProperty</signature>
                        <name>IsFocusedProperty</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Snotsoft.Validation.Validate</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>AlphaToInt</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Button_Click</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckRegCode</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckUserCode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckValid</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CodeEntered</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Convert</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GeneratePublicCode</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GeneratePublicSeed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GenerateRegCode</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetDate</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>IntToAlpha</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>StringToInt</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>txtCode_KeyDown</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>alphaNum</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>appName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>button</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>date</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>isValid</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>machineName</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAGIC_NUMBER</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>publicCode</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>publicSeed</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>regCode</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>regKeyName</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtCode</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtMsg1</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>txtMsg2</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>user</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Snotsoft.Words.Lexicon</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>CheckEmptySlot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>CheckFullSlot</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>CheckSlot</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>CheckWord</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ContainsLetter</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>ContainsSpace</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>MakeList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;string&gt;)</signature>
                        <name>RemoveDuplicates</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>SetSpaceToken</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>SortByLength</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>WordFromLetters</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>char</signature>
                        <name>BLANK</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Snotsoft.Words.Lexicon/Section&gt;</signature>
                        <name>sections</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>SPACE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WordCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>Words</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>Snotsoft.Words.Lexicon/Section</name>
                <newname>b/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>finish</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>length</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>start</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>UserControls.CircularProgressBar</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>HandleAnimationTick</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>HandleLoaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>HandleUnloaded</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.DependencyPropertyChangedEventArgs)</signature>
                        <name>HandleVisibleChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Shapes.Ellipse, float64, float64, float64)</signature>
                        <name>SetPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>animationTimer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C0</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C2</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C3</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C4</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C5</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C7</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Shapes.Ellipse</signature>
                        <name>C8</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>LayoutRoot</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Media.RotateTransform</signature>
                        <name>SpinnerRotate</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
            </type>
            <type>
                <name>XamlGeneratedNamespace.GeneratedInternalTypeHelper</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.EventInfo, object, System.Delegate)</signature>
                        <name>AddEventHandler</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, object, string)</signature>
                        <name>CreateDelegate</name>
                    </method>
                    <method>
                        <signature>object(System.Type, System.Globalization.CultureInfo)</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>object(System.Reflection.PropertyInfo, object, System.Globalization.CultureInfo)</signature>
                        <name>GetPropertyValue</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.PropertyInfo, object, object, System.Globalization.CultureInfo)</signature>
                        <name>SetPropertyValue</name>
                    </method>
                </methodlist>
                <fieldlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>31</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>266</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>207</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>6</statistic>
            <statistic>19.35 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>158</statistic>
            <statistic>59.40 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>204</statistic>
            <statistic>98.55 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>72</statistic>
            <statistic>27.07 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>30</statistic>
            <statistic>11.28 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>10</statistic>
            <statistic>3.76 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>8</statistic>
            <statistic>3.01 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>5</statistic>
            <statistic>1.88 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'f'</description>
            <statistic>5</statistic>
            <statistic>1.88 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>4</statistic>
            <statistic>1.50 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>